{"version":3,"sources":["layouts/header.tsx","container/more.tsx","components/dataTable.tsx","container/menu.tsx","layouts/content.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["header","className","color","More","show","createData","name","status","userDomain","defaultStatus","lastUpdated","updatedBy","actions","rows","StyledTableRow","withStyles","createStyles","root","backgroundColor","TableRow","DataTable","useState","setShow","onClickHandler","TableContainer","size","TableHead","style","borderBottom","TableCell","align","Tooltip","title","IconButton","aria-label","TableBody","map","row","i","component","scope","float","green","yellow","onClick","Menu","checked","setChecked","handleChange","event","preventDefault","currentTarget","Checkbox","onChange","inputProps","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d69d335.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport \"./../styles/Header.css\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst header = () => {\n    return (\n        <div className=\"header\">\n          <div>Manage LDAP Configurations <span className=\"link\"><LinkIcon color=\"primary\"/> <CancelIcon color=\"primary\"/></span></div>\n          \n        </div>\n      );\n}\n\nexport default header;","import React, {useState} from 'react';\nimport './../styles/More.css';\n\ntype MoreProps = {\n  show: boolean,\n}\n\nconst More = ({show}: MoreProps) => {\n\n  \n  if(!show)\n  { \n      return (null);\n  }\n  return (\n    <div className= \"more\">\n       <div>Sync Now</div>\n       <div>Delete</div>      \n    </div>\n  );\n  \n}\n\nexport default More;","import React, { useState } from 'react';\nimport \"./../styles/Table.css\";\nimport { makeStyles, withStyles, createStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport CheckIcon from '@material-ui/icons/Check';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport { green } from '@material-ui/core/colors';\nimport { yellow } from '@material-ui/core/colors';\nimport More from '../container/more';\n\n\nfunction createData(name: string, status: string, userDomain: string, defaultStatus: string, lastUpdated: string, updatedBy: string , actions: string) {\n  return { name, status, userDomain, defaultStatus, lastUpdated, updatedBy , actions};\n}\n\nconst rows = [\n  createData('CORP','Active','CORP',' ','10/15/2018 11:28:00 PM', 'Steve, Bipin Domy',' ' ),\n  createData('Local Computer','Active','USXXLETTEJL1C',' ','10/15/2018 11:28:00 PM', 'Thomas, Abin',' ' ),\n  createData('Incident Management LDAP','Inactive','EMC',' ','10/15/2018 11:28:00 PM', 'S, Karthika',' ' ),\n  createData('Admin Dashboard LDAP','Failed','CORP',' ','10/15/2018 11:28:00 PM', 'Steve, Bipin Domy',' ' ),\n  createData('Incident Management LDAP','Completed','USXXLETTEJL1C',' ','10/15/2018 11:28:00 PM', 'Thomas, Abin',' ' ),\n  createData('Business Impact analysis LDAP','Cancelled','USXXLETTEJL1C',' ','10/15/2018 11:28:00 PM', 'S, Karthika',' ' ),\n  createData('Incident Management LDAP','Queued','CORP',' ','10/15/2018 11:28:00 PM', 'George, Adam',' ' ),\n];\n\nconst StyledTableRow = withStyles(() =>\n  createStyles({\n    root: {\n      '&:nth-of-type(even)': {\n        backgroundColor: \"#f9fbe7\",\n      },\n    },\n  }),\n)(TableRow);\n\n  \n\nconst DataTable = () => {\n\n  const [show, setShow]= useState(false);\n\n    const onClickHandler = () =>{\n        \n        setShow(!show);\n    }\n   \n    return (\n        <TableContainer>\n      <Table className=\"table\" size=\"small\">\n        <TableHead>\n          <TableRow style={{borderBottom: \"2px solid #9e9e9e\" }}>\n            <TableCell align=\"left\">NAME\n            <Tooltip title=\"Filter list\">\n                <IconButton aria-label=\"filter list\">\n                  <FilterListIcon />\n                </IconButton>\n              </Tooltip>\n              <span className=\"line\"/>\n            </TableCell>\n            <TableCell align=\"left\">SYNC STATUS\n              <Tooltip title=\"Filter list\">\n                <IconButton aria-label=\"filter list\">\n                  <FilterListIcon />\n                </IconButton>\n              </Tooltip>\n              <span className=\"line\"/>\n            </TableCell>\n            <TableCell align=\"left\">USER'S DOMAIN\n            <Tooltip title=\"Filter list\">\n                <IconButton aria-label=\"filter list\">\n                  <FilterListIcon />\n                </IconButton>\n              </Tooltip>\n              <span className=\"line\"/>\n            </TableCell>\n            <TableCell align=\"left\">DEFAULT\n            <Tooltip title=\"Filter list\">\n                <IconButton aria-label=\"filter list\">\n                  <FilterListIcon />\n                </IconButton>\n              </Tooltip>\n              <span className=\"line\"/>\n            </TableCell>\n            <TableCell align=\"left\">LAST UPDATED\n            <Tooltip title=\"Filter list\">\n                <IconButton aria-label=\"filter list\">\n                  <FilterListIcon />\n                </IconButton>\n              </Tooltip>\n              <span className=\"line\"/>\n            </TableCell>\n            <TableCell align=\"left\">UPDATED BY\n            <Tooltip title=\"Filter list\">\n                <IconButton aria-label=\"filter list\">\n                  <FilterListIcon />\n                </IconButton>\n              </Tooltip>\n              <span className=\"line\"/>\n            </TableCell>\n            <TableCell align=\"right\">ACTIONS</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody  className=\"Row\">\n          {rows.map((row,i) => (\n            <StyledTableRow key={row.name} style={{color:\"#ffffff\"}}>\n              <TableCell component=\"th\" scope=\"row\" style={{color:\"#80aaff\"}}>\n                {row.name}\n              </TableCell>\n              <TableCell align=\"left\" \n              style={row.status!==\"Active\" && row.status!==\"Inactive\" ? {color:\"#80aaff\"} : {color:\"#000000\"}}>\n              {row.status}{row.status===\"Failed\" ? <ErrorIcon color='error' style={{float:\"right\"}}/> : null}\n              {row.status===\"Completed\" ? <CheckCircleIcon style={{float:\"right\" , color: green[600]}}/> : null}\n              {row.status===\"Cancelled\" ? <WarningIcon style={{float:\"right\", color: yellow[800]}}/> : null}\n              {row.status===\"Queued\" ? <WatchLaterIcon color='primary' style={{float:\"right\"}}/> : null}\n              </TableCell>\n              <TableCell align=\"left\">{row.userDomain}</TableCell>\n              <TableCell align=\"left\">{i===0 ? <CheckIcon/> : null}</TableCell>\n              <TableCell align=\"left\">{row.lastUpdated}</TableCell>\n              <TableCell align=\"left\">{row.updatedBy}</TableCell>\n              <TableCell align=\"left\"><Tooltip title=\"More\">\n                <IconButton aria-label=\"more\">\n                <MoreHorizIcon color='primary' onClick={onClickHandler}/>\n                </IconButton>\n              </Tooltip>\n              </TableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>      \n      <More show={show} />\n    </TableContainer>\n      );\n}\n\nexport default DataTable;\n","import React, {useState} from 'react';\nimport \"./../styles/Content.css\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './../styles/Menu.css'\n\ntype MenuProps = {\n  show: boolean,\n}\n\nconst Menu = ({show}: MenuProps) => {\n    const [checked, setChecked] = useState(true);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    setChecked(event.currentTarget.checked);\n  };\n\n  if(!show)\n  { \n      return (null);\n  }\n  return (\n    <div className=\"modal\">\n        <div>\n      <Checkbox\n        checked={checked}\n        onChange={handleChange}\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />Name</div>\n      <div>\n      <Checkbox\n        checked={!checked}\n        onChange={handleChange}\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />ID</div>\n      <div>\n      <Checkbox\n        checked={checked}\n        onChange={handleChange}\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />Sync Status</div>\n      <div>\n      <Checkbox\n        checked={checked}\n        onChange={handleChange}\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />User's Domain</div>\n      <div>\n      <Checkbox\n        checked={checked}\n        onChange={handleChange}\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />Default Status</div>\n      <div>\n      <Checkbox\n        checked={checked}\n        onChange={handleChange}\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />Last Updated</div>\n      <div>\n      <Checkbox\n        checked={checked}\n        onChange={handleChange}\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />Updated By</div>\n      \n    </div>\n  );\n  \n}\n\nexport default Menu;","import React, { useState } from 'react';\nimport \"./../styles/Content.css\";\nimport Table from \"../components/dataTable\";\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Menu from '../container/menu';\n\nconst Content = () => {\n\n    const [show, setShow]= useState(false);\n\n    const onClickHandler = () =>{\n        \n        setShow(!show);\n    }\n\n    return (\n        <div className=\"Content\">\n            <div>\n               <span className=\"Column\">Drag a column name here to group the items by the value within that column.</span>\n               <span className=\"eye\">\n               <Tooltip title=\"Menu list\">\n                <IconButton aria-label=\"menu list\">\n                <RemoveRedEyeIcon color='primary' onClick={onClickHandler}/> \n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Add list\">\n                <IconButton aria-label=\"Add list\">\n                <AddCircleIcon color='primary'/> \n                </IconButton>\n              </Tooltip></span>\n            </div>\n            <Table/>\n            \n            <Menu show={show}/>\n          \n        </div>\n      );\n}\n\nexport default Content;","import React from 'react';\nimport Header from './layouts/header';\nimport Content from './layouts/content';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}